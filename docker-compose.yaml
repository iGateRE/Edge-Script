# * Copyright 2023 Intel Corporation.
# *
# * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# * in compliance with the License. You may obtain a copy of the License at
# *
# * http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software distributed under the License
# * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# * or implied. See the License for the specific language governing permissions and limitations under
# * the License.
# *
# * EdgeX Foundry, Napa release
# *******************************************************************************/
#
#
#
# ************************ This is a generated compose file ****************************
#
# DO NOT MAKE CHANGES that are intended to be permanent to EdgeX edgex-compose repo.
#
# Permanent changes can be made to the source compose files located in the compose-builder folder
# at the top level of the edgex-compose repo.
#
# From the compose-builder folder use `make build` to regenerate all standard compose files variations
#
name: edgex
services:
app-rules-engine:
    container_name: edgex-app-rules-engine
    depends_on:
     consul:
        condition: service_started
     core-data:
        condition: service_started
    environment:
     EDGEX_PROFILE: rules-engine
     EDGEX_SECURITY_SECRET_STORE: "false"
     SERVICE_HOST: edgex-app-rules-engine
    hostname: edgex-app-rules-engine
    image: edgexfoundry/app-service-configurable:3.1.1
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 59701
     published: "59701"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
consul:
    command:
    - agent
    - -ui
    - -bootstrap
    - -server
    - -client
    - 0.0.0.0
    container_name: edgex-core-consul
    hostname: edgex-core-consul
    image: hashicorp/consul:1.16.6
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 8500
     published: "8500"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: root:root
    volumes:
    - type: volume
     source: consul-config
     target: /consul/config
     volume: {}
    - type: volume
     source: consul-data
     target: /consul/data
     volume: {}
core-command:
    container_name: edgex-core-command
    depends_on:
     consul:
        condition: service_started
     core-metadata:
        condition: service_started
     database:
        condition: service_started
    environment:
     EDGEX_SECURITY_SECRET_STORE: "false"
     SERVICE_HOST: edgex-core-command
    hostname: edgex-core-command
    image: edgexfoundry/core-command:3.1.1
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 59882
     published: "59882"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
core-common-config-bootstrapper:
    container_name: edgex-core-common-config-bootstrapper
    depends_on:
     consul:
        condition: service_started
    environment:
     ALL_SERVICES_DATABASE_HOST: edgex-redis
     ALL_SERVICES_MESSAGEBUS_HOST: edgex-redis
     ALL_SERVICES_REGISTRY_HOST: edgex-core-consul
     APP_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
     DEVICE_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
     EDGEX_SECURITY_SECRET_STORE: "false"
    hostname: edgex-core-common-config-bootstrapper
    image: edgexfoundry/core-common-config-bootstrapper:3.1.1
    networks:
     edgex-network: null
    read_only: true
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
core-data:
    container_name: edgex-core-data
    depends_on:
     consul:
        condition: service_started
     core-metadata:
        condition: service_started
     database:
        condition: service_started
    environment:
     EDGEX_SECURITY_SECRET_STORE: "false"
     SERVICE_HOST: edgex-core-data
    hostname: edgex-core-data
    image: edgexfoundry/core-data:3.1.1
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 59880
     published: "59880"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
core-metadata:
    container_name: edgex-core-metadata
    depends_on:
     consul:
        condition: service_started
     database:
        condition: service_started
    environment:
     EDGEX_SECURITY_SECRET_STORE: "false"
     SERVICE_HOST: edgex-core-metadata
    hostname: edgex-core-metadata
    image: edgexfoundry/core-metadata:3.1.1
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 59881
     published: "59881"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
database:
    container_name: edgex-redis
    hostname: edgex-redis
    image: redis:7.0.15-alpine
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 6379
     published: "6379"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: root:root
    volumes:
    - type: volume
     source: db-data
     target: /data
     volume: {}
rules-engine:
    container_name: edgex-kuiper
    depends_on:
     database:
        condition: service_started
    environment:
     CONNECTION__EDGEX__REDISMSGBUS__PORT: "6379"
     CONNECTION__EDGEX__REDISMSGBUS__PROTOCOL: redis
     CONNECTION__EDGEX__REDISMSGBUS__SERVER: edgex-redis
     CONNECTION__EDGEX__REDISMSGBUS__TYPE: redis
     EDGEX__DEFAULT__PORT: "6379"
     EDGEX__DEFAULT__PROTOCOL: redis
     EDGEX__DEFAULT__SERVER: edgex-redis
     EDGEX__DEFAULT__TOPIC: edgex/rules-events
     EDGEX__DEFAULT__TYPE: redis
     KUIPER__BASIC__CONSOLELOG: "true"
     KUIPER__BASIC__RESTPORT: "59720"
    hostname: edgex-kuiper
    image: lfedge/ekuiper:1.11.5-alpine
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 59720
     published: "59720"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: kuiper:kuiper
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
    - type: volume
     source: kuiper-data
     target: /kuiper/data
     volume: {}
    - type: volume
     source: kuiper-etc
     target: /kuiper/etc
     volume: {}
    - type: volume
     source: kuiper-log
     target: /kuiper/log
     volume: {}
    - type: volume
     source: kuiper-plugins
     target: /kuiper/plugins
     volume: {}
support-notifications:
    container_name: edgex-support-notifications
    depends_on:
     consul:
        condition: service_started
     database:
        condition: service_started
    environment:
     EDGEX_SECURITY_SECRET_STORE: "false"
     SERVICE_HOST: edgex-support-notifications
    hostname: edgex-support-notifications
    image: edgexfoundry/support-notifications:3.1.1
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 59860
     published: "59860"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
support-scheduler:
    container_name: edgex-support-scheduler
    depends_on:
     consul:
        condition: service_started
     database:
        condition: service_started
    environment:
     EDGEX_SECURITY_SECRET_STORE: "false"
     INTERVALACTIONS_SCRUBAGED_HOST: edgex-core-data
     INTERVALACTIONS_SCRUBPUSHED_HOST: edgex-core-data
     SERVICE_HOST: edgex-support-scheduler
    hostname: edgex-support-scheduler
    image: edgexfoundry/support-scheduler:3.1.1
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 59861
     published: "59861"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
ui:
    container_name: edgex-ui-go
    environment:
     EDGEX_SECURITY_SECRET_STORE: "false"
     SERVICE_HOST: edgex-ui-go
    hostname: edgex-ui-go
    image: edgexfoundry/edgex-ui-arm64:3.1.0
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     target: 4000
     published: "4000"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
    - no-new-privileges:true
    user: 2002:2001
    volumes:
    - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
        create_host_path: true
device-mqtt:
    container_name: edgex-device-mqtt
    depends_on:
     consul:
        condition: service_started
        required: true
     core-data:
        condition: service_started
        required: true
     core-metadata:
        condition: service_started
        required: true
    environment:
     EDGEX_SECURITY_SECRET_STORE: "false"
     MQTTBROKERINFO_HOST: edgex-mqtt-broker
     SERVICE_HOST: edgex-device-mqtt
    hostname: edgex-device-mqtt
    image: edgexfoundry/device-mqtt:3.1.1
    networks:
     edgex-network: null
    ports:
    - mode: ingress
     host_ip: 127.0.0.1
     target: 59982
     published: "59982"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
     - no-new-privileges:true
    user: 2002:2001
    volumes:
     - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
         create_host_path: true
     - type: volume
     source: device-mqtt
     target: /res
     volume: {}
mqtt-broker:
    command:
     - /usr/sbin/mosquitto
     - -c
     - /mosquitto-no-auth.conf
    container_name: edgex-mqtt-broker
    hostname: edgex-mqtt-broker
    image: eclipse-mosquitto:2.0.18
    networks:
     edgex-network: null
    ports:
     - mode: ingress
     host_ip: 0.0.0.0
     target: 1883
     published: "1884"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
     - no-new-privileges:true
    user: 2002:2001
device-modbus:
    container_name: edgex-device-modbus
    depends_on:
     consul:
        condition: service_started
        required: true
     core-data:
        condition: service_started
        required: true
     core-metadata:
        condition: service_started
        required: true
    environment:
     EDGEX_SECURITY_SECRET_STORE: "false"
     SERVICE_HOST: edgex-device-modbus
    hostname: edgex-device-modbus
    image: edgexfoundry/device-modbus:3.1.1
    networks:
     edgex-network: null
    ports:
     - mode: ingress
     host_ip: 127.0.0.1
     target: 59901
     published: "59901"
     protocol: tcp
    read_only: true
    restart: always
    security_opt:
     - no-new-privileges:true
    user: 2002:2001
    volumes:
     - type: bind
     source: /etc/localtime
     target: /etc/localtime
     read_only: true
     bind:
         create_host_path: true
     - type: volume
     source: device-modbus
     target: /res
     volume: {}

networks:
edgex-network:
    name: edgex_edgex-network
    driver: bridge
volumes:
consul-config:
    name: edgex_consul-config
consul-data:
    name: edgex_consul-data
db-data:
    name: edgex_db-data
kuiper-data:
    name: edgex_kuiper-data
kuiper-etc:
    name: edgex_kuiper-etc
kuiper-log:
    name: edgex_kuiper-log
kuiper-plugins:
    name: edgex_kuiper-plugins
device-mqtt:
    name: edgex_device-mqtt
device-modbus:
    name: edgex_device-modbus
